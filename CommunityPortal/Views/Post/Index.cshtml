@inject UserManager<ApplicationUser> _userManager
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@model dynamic
@{
    ViewBag.Title = "Post Index";
    Layout = "_Layout";
    var user = await _userManager.GetUserAsync(User);
}

@section Scripts
{
    @if (User.Identity.IsAuthenticated)
    {
        <script type="module" src="~/js/Post.js"></script>
    }
}

<a
    class="btn btn-primary mb-4"
    asp-controller="Post"
    asp-action="Create">
    New Post
</a>
<div class="row">
    <div class="col-lg-8">
        @foreach (var post in Model)
        {
            <div class="card mb-4">

                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="true">Post</a>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            if (post.UserId.Equals(user?.Id) || User.IsInRole("Administrators"))
                            {
                                <li class="nav-item">
                                    <a
                                        class="nav-link link-dark"
                                        asp-controller="Post"
                                        asp-action="Edit"
                                        asp-route-id="@post.Id">
                                        Edit
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <form method="Post" action="@Url.Action("Delete", "Post")">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" value="@post.Id" name="ID"/>
                                        <button class="nav-link link-danger" type="submit">Remove</button>
                                    </form>
                                </li>
                            }
                        }
                    </ul>
                </div>
                <div class="card-body">
                    @foreach (var postTag in post.PostTags)
                    {
                        <a
                            class="badge bg-secondary text-decoration-none link-light"
                            asp-controller="Post"
                            asp-action="Index"
                            asp-route-tag="@postTag.Tag.Name">
                            @postTag.Tag.Name
                        </a>
                    }
                    <h5 class="card-title">@post.Subject</h5>
                    <p class="card-text">@Html.Raw(post.Content)</p>
                    <a class="btn btn-primary btn-sm"
                       asp-controller="Post"
                       asp-action="View"
                       asp-route-id="@post.Id">
                        Read more →
                    </a>
                </div>
                <div class="card-footer small text-muted">
                    Posted @post.Timestamp.ToString("yyyy-MM-dd HH:mm") by @post.User
                    <span>in</span>
                    @if(post.Category != null) 
                    {
                        <a
                            class="text-decoration-none"
                            asp-controller="Post"
                            asp-action="Category"
                            asp-route-category="@post.Category?.Name">
                            @post.Category?.Name
                        </a>
                    }
                    else
                    {
                        <a
                            class="text-decoration-none"
                            asp-controller="Event"
                            asp-action="Index">
                            Event
                        </a>
                    }
                </div>
            </div>
        }
        <!-- Pagination-->
        @Html.PagedListPager((IPagedList) Model, page => Url.Action(null, new {page}), new PagedListRenderOptions
        {
            PageClasses = new[] {"page-link"},
            UlElementClasses = new[] {"pagination justify-content-center my-4"},
            LiElementClasses = new[] {"page-item"},
            DisplayItemSliceAndTotal = false
        })
    </div>
    <partial name="_PostSideBarPartial"/>
</div>